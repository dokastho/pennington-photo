#!/bin/bash
# allow create | destroy | reset | dump
set -Eeuo pipefail

usage() {
  echo "Usage: $0 (create|destroy|reset|users|dump)"
}

if [ $# -ne 1 ] ; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
  ## TODO avoid clobbering an existing database?
    mkdir -p var/uploads
    sqlite3 var/pennington_photo.sqlite3 < sql/schema.sql
    sqlite3 var/pennington_photo.sqlite3 < sql/data.sql
    ;;

  "destroy")
    rm -rf var/pennington_photo.sqlite3 var/uploads
    ;;
  "reset")
    rm -rf var/pennington_photo.sqlite3 var/uploads
    mkdir -p var/uploads
    sqlite3 var/pennington_photo.sqlite3 < sql/schema.sql
    sqlite3 var/pennington_photo.sqlite3 < sql/data.sql
    ;;
  "backup")
    YEAR=`date +%Y`
    MONTH=`date +%m`
    DAY=`date +%d`
    DIR=${MONTH}_${DAY}_${YEAR}
    mkdir -p backups
    mkdir -p backups/${DIR}
    cp var/pennington_photo.sqlite3 backups/${DIR}/db_${DIR}.sqlite3
    tar -czvf backups/${DIR}/images_${DIR}.tar pennington_photo/static/img
    ;;
  "dump")
    sqlite3 -batch -line var/pennington_photo.sqlite3 'select * from users'
    sqlite3 -batch -line var/pennington_photo.sqlite3 'select * from galleries'
    sqlite3 -batch -line var/pennington_photo.sqlite3 'select * from pictures'
    sqlite3 -batch -line var/pennington_photo.sqlite3 'select * from sizes'
    ;;
  *)
    usage
    exit 1
    ;;
esac
